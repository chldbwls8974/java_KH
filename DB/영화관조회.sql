USE CGV;

-- 영화 오펜하이머에 출연한 감독과 배우들을 조회하는 쿼리
SELECT MO_TITLE AS 영화제목, RO_ROLE AS 역할, FP_NAME AS 이름 
FROM MOVIE
JOIN ROLE 
ON MO_NUM = RO_MO_NUM
JOIN FILM_PERSON
ON FP_NUM = RO_FP_NUM;

-- 영화 기본정보를 조회하는 쿼리
SELECT * FROM MOVIE WHERE MO_TITLE='오펜하이머';

-- 영화 오펜하이머의 트레일러와 스틸컷 파일의 개수 조회하는 쿼리
SELECT COUNT(*) AS 파일개수 FROM MOVIE_FILE WHERE MF_MO_NUM IN (SELECT MO_NUM FROM MOVIE WHERE MO_TITLE = '오펜하이머');


-- ABC123 회원이 예매한 내역 조회 (영화명, 시간, 좌석명,
SELECT MO_TITLE AS 영화명, SD_DATE AS 날짜, SD_START_TIME AS 시작시간, SD_END_TIME AS 종료시간, SE_NAME AS 좌석번호  
FROM RESERVATION 
JOIN RESERVATION_LIST ON RV_NUM = RL_RV_NUM
JOIN SEAT ON RL_SE_NUM = SE_NUM
JOIN SCHEDULE ON RV_SD_NUM = SD_NUM
JOIN MOVIE ON SD_MO_NUM = MO_NUM
WHERE RV_ME_ID = 'abc123';

-- 티켓별로 좌석 번호가 아닌 성인, 청소년 수 조회 
SELECT SUM(RV_ADULT) AS 성인수, SUM(RV_CHILD) AS 청소년수
FROM RESERVATION 
JOIN SCHEDULE ON RV_SD_NUM = SD_NUM
JOIN MOVIE ON SD_MO_NUM = MO_NUM
WHERE RV_ME_ID = 'abc123'
GROUP BY RV_NUM;


-- 강남점에서 콘크리트 유토피아 20ㅣ50에 예매 가능한 좌석을 조회하는 쿼리
SELECT  *  
FROM SEAT
JOIN SCREEN ON SE_SC_NUM = SC_NUM
JOIN SCHEDULE ON SD_SC_NUM = SC_NUM
WHERE SD_NUM = 8 AND SE_NAME NOT IN
(SELECT * FROM RESERVATION 
JOIN RESERVATION_LIST ON RL_RV_NUM = RV_NUM
WHERE RV_SD_NUM=8);

SELECT  *  
FROM SEAT
JOIN SCREEN ON SE_SC_NUM = SC_NUM
JOIN SCHEDULE ON SD_SC_NUM = SC_NUM
LEFT JOIN RESERVATION ON RV_SD_NUM = SD_NUM
LEFT JOIN RESERVATION_LIST ON RL_RV_NUM = RV_NUM;


SELECT SE_NAME 
FROM SEAT
WHERE SE_NAME NOT IN(SELECT SE_NAME FROM SCHEDULE
JOIN RESERVATION ON SD_NUM = RV_SD_NUM
JOIN RESERVATION_LIST ON RV_NUM = RL_RV_NUM
JOIN SEAT ON RL_SE_NUM = SE_NUM
WHERE SD_START_TIME = '20:50:00');

-- 강남지점에서 콘크리트 유토피아 20:50에 있는 좌석등ㄹ과 예약 가능 여부를 작성하는 퀄
 SELECT SE_NAME AS 좌석번호, 
 CASE WHEN RL_NUM IS NULL 
 THEN '예약가능' 
 ELSE '예약불가능' END AS 예약
 FROM SEAT
 JOIN SCREEN ON SE_SC_NUM = SC_NUM
 JOIN SCHEDULE ON SD_SC_NUM = SC_NUM
 LEFT JOIN RESERVATION_LIST ON SE_NUM = RL_SE_NUM
 WHERE SD_NUM = 8;


-- 'ABC123' 회원이 관람했던 영화 목록을 조회하는 쿼리 
SELECT RV_ME_ID AS 관람아이디, MO_TITLE AS 관람영화
FROM RESERVATION
JOIN SCHEDULE ON RV_SD_NUM = SD_NUM
JOIN MOVIE ON SD_MO_NUM = MO_NUM
WHERE RV_ME_ID = 'abc123' AND NOW() >= CONCAT(SD_DATE,' ',SD_START_TIME) -- 시작 시간이 지금보다 전의 시간으로
GROUP BY MO_NUM; -- 영화 N회차 하는 사람들을 고려하여  

-- 예약 가능한 모든 상영 영화 정보를 조회하는 쿼리
SELECT MO_TITLE AS 영화제목, CONCAT(SD_DATE,' ',SD_START_TIME) AS 상영일자, SD_POSSIBLE_SEAT AS 예약가능좌석수, SD_SC_NUM AS 상영관
FROM SCHEDULE
JOIN MOVIE ON SD_MO_NUM = MO_NUM
WHERE SD_POSSIBLE_SEAT >= 1 AND NOW() < CONCAT(SD_DATE,' ',SD_START_TIME);

-- 최고 다회차 회원 3명 뽑는 쿼리
-- 각 영화를 각 회원이 몇번 봤는지 조회하는 쿼리 
SELECT RV_ME_ID, MO_TITLE,COUNT(MO_TITLE) AS 횟수
FROM RESERVATION
JOIN SCHEDULE ON RV_SD_NUM = SD_NUM
JOIN MOVIE ON SD_MO_NUM = MO_NUM
WHERE NOW() < CONCAT(SD_DATE,' ',SD_START_TIME)
GROUP BY RV_ME_ID, SD_MO_NUM
ORDER BY COUNT(MO_TITLE) DESC
LIMIT 3;

-- 회원들 중 최다 결제 3명
SELECT RV_ME_ID,SUM(RV_PRICE)
FROM RESERVATION
JOIN SCHEDULE ON RV_SD_NUM = SD_NUM
JOIN MOVIE ON SD_MO_NUM = MO_NUM
WHERE NOW() < CONCAT(SD_DATE,' ',SD_START_TIME)
GROUP BY RV_ME_ID
ORDER BY SUM(RV_PRICE) DESC
LIMIT 3;


SELECT 
    ME_ID AS 아이디,
    SUM(CASE
                WHEN NOW() >= CONCAT(MS_DATE, ' ', MS_START_TIME) THEN RV_PRICE
                ELSE 0
            END),
            0 AS 누적금액
FROM
    RESERVATION
        JOIN
    MOVIE_SCHEDULE ON RV_MS_NUM = MS_NUM
        RIGHT JOIN
    MEMBER ON RV_ME_ID = ME_ID
GROUP BY RV_ME_ID
ORDER BY 누적금액 DESC
LIMIT 3;


-- 상위 쿼리 null 포함, 순위함수 이용
SELECT * FROM (
	SELECT 
		ME_ID AS 아이디,
		누적금액,
		RANK() OVER(ORDER BY 누적금액 DESC) AS 순위
	FROM
		(SELECT *, SUM(CASE
					WHEN NOW() >= CONCAT(SD_DATE, ' ', SD_START_TIME) THEN RV_PRICE
					ELSE 0
				END),
				0 AS 누적금액 FROM
		RESERVATION
			JOIN
		SCHEDULE ON RV_SD_NUM = SD_NUM
			RIGHT JOIN
		MEMBER ON RV_ME_ID = ME_ID
		GROUP BY RV_ME_ID
		) AS A
	) AS B
WHERE 순위 <= 3;


-- 영화인별로 배우로 참여한 영화 개수 조회하는 쿼리 
SELECT FP_NAME AS 영화인, COUNT(FP_NAME) AS '참여 영화 수'
FROM FILM_PERSON
RIGHT JOIN ROLE ON  RO_FP_NUM = FP_NUM
GROUP BY FP_NAME;

SELECT FP_NAME AS 영화인, COUNT(RO_NUM)
FROM FILM_PERSON
LEFT JOIN (SELECT * FROM ROLE WHERE RO_ROLE = '배우') AS ROLE2 ON RO_FP_NUM = FP_NUM -- 조인하기 전에 서브쿼리에서 배우만을 선택
GROUP BY FP_NAME;


-- 각 스케쥴 별 예약 좌석 수를 조회하는 쿼리
SELECT MO_TITLE AS 영화명, SD_DATE AS 날짜 ,SD_START_TIME AS 시간, SD_SC_NUM AS 상영관명, IFNULL((SUM(RV_ADULT)+SUM(RV_CHILD)),0) AS '예약된 좌석 수'
FROM SCHEDULE
LEFT JOIN RESERVATION
ON RV_SD_NUM = SD_NUM
LEFT JOIN MOVIE ON SD_MO_NUM = MO_NUM
GROUP BY SD_NUM;


-- 영화관 별 상영 영화 목록 조회 쿼리
SELECT TH_NAME AS 지점명, MO_TITLE AS 상영영화
FROM SCHEDULE
JOIN MOVIE ON SD_MO_NUM = MO_NUM
JOIN SCREEN ON SD_SC_NUM = SC_NUM
JOIN THEATER ON SC_TH_NUM = TH_NUM
WHERE NOW() < CONCAT(SD_DATE,' ',SD_START_TIME)
GROUP BY TH_NUM , MO_TITLE;


-- 오펜하이머를 상영하는 영화관을 조회하는 쿼리
SELECT TH_NAME AS 지점명, MO_TITLE AS 상영영화
FROM SCHEDULE
JOIN (SELECT MO_NUM, MO_TITLE FROM MOVIE WHERE MO_TITLE='오펜하이머')AS MOVIE2 ON SD_MO_NUM = MO_NUM
JOIN SCREEN ON SD_SC_NUM = SC_NUM
JOIN THEATER ON SC_TH_NUM = TH_NUM
WHERE NOW() < CONCAT(SD_DATE,' ',SD_START_TIME)
GROUP BY TH_NUM , MO_TITLE;























