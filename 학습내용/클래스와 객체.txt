
	[클래스]
		객체(현실의 정보)의 속성과 기능을 코드로 구현한 것
		멤버변수, 메서드, 생성자로 구성
		속성: 멤버변수   ------------------------------------------------------------->> 객체 속성 : 사물을 나타낼 수 잇는 정보
 		기능: 메소드 ----------------------------------------------------------↘     따로 초기화 하지 않아도 각 타입의 기본값으로 초기화됨	ex) 대학생의 학번, 이름, 학년 등등.....
									 ↘	     							대학생 클래스의 멤버변수는 학번, 이름, 학년이 되는것임.
		클래스를 정의한다:: 객체를 클래스를 구현하는 것.  == 추상화


		(접근 제어자) class 클래스명{
			(접근 제어자) 멤버변수;
			(접근 제어자) 메서드;  ((main 같은,, 기능을 가진,,,)
		}



	[함수]
		하나의 기능을 수행하는 일련의 코드
		필요한 기능을 미리 구현해놓고 필요할 때마다 호출하여 사용
		매개변수: 함수를 실행하기 위해 필요한 정보
			매개변수는 없을 수 있다.

		- 출력
		반환값: 함수가 실행 후 알려주는 값
		반환값이 필요없는 경우 반환타입을 void로 설정

		- 정의하기
			반환타입 함수명(매개변수들){
				구현;
				return 값;
			}


	[메서드]
		함수가 기능이라면 메서드는 객체에 있는 기능
		자바에 나온느 모든 기능은 메서드
		함수는 필요한 정보를 모드 ㅐ개변수로 전달
		메서드는 클래스의 기능이기때문에 일부 정보는 클래스의 멤버 변수로 가져올 수 있음.
	
		- 메서드 오버로딩
			동일한 이름의 메소드가 여러개인 경우
			조건( 결론 : 매개변수가 다름)
				1. 매개변수의 개수가 다름
				2. 매개변수의 타입이 다름



	[추상화]
		현실에 있는 정보를 클래스로 만드는 작업
		성적과 같이 여러조건들로 상태가 계속 바뀌는 정보를 다룰때 사용하면 편리함.

	- 객체 생성하기
		클래스명 객체명 = new 클래스명();
		new:  객체를 생성하는 예약어
		클래스명() : 생성자 :: 객체를 초기화 하는 예약어



	[생성자]
		인스턴스(객체)의 멤버변수나 상수를 초기화하는 것
		편리 => 멤버를 한번에 쉽게 초기화 가능
		메서드와 비슷하게 생김 
			(특징)
				이름이 클래스 이름과 같다.
				메서드와 비교했을 때 리턴타입이 없다. => void가 아니라 아예 없다.
		
		- 디폴트 생성자(기본 생성자)			
			매개변수가 없는 생성자			ex) Student studentkim = new Student();  <= 괄호 안에 매개변수가 없다.
			클래스의 생성자가 하나도 없을 때 자동으로 추가가 됨  		ex) 
			기본 생성자가 없는 경우도 있음 ( ex: Scanner )


	
	[스택 메모리]
		메서드 호출과 관련된 정보를 저장하는 영역
		메서드 호출 시 매개변수, 지역변수, 복귀 주소 등이 저장



	[ 힙 메모리]
		동적으로 할당된 객체들이 저장되는 영역 (new 키워드)
		확장 축소 가능
		사용되지 않는 객체는 GC(가비지 컬렉터)에 의해 제거
		객체의 인스턴스 변수, 배열 등


	[생성자 오버로딩]
		여러종류의 생성자를 만들 수 있다.
		

	[접근 제어자]
		private : 자신
		default (생략가능) : 자신 + 같은 패키지
		protected :  자신 클래스 + 같은 패키지 + 자식 클래스
		public : 모두






































